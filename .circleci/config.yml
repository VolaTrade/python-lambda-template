version: 2.1

orbs:
  aws-cli: circleci/aws-cli@1.2.1
  serverless-framework: circleci/serverless-framework@1.0.1

alias:
  - &workdir /home/circleci/build

  - &container_config
    docker:
      - image: circleci/python:3.7
    working_directory: *workdir

  - &checkout checkout

  - &install_aws_cli aws-cli/install

  - &setup_remote_docker setup_remote_docker

  - &serverless_setup
    run:
      name: Installing serverless cli
      command: sudo apt install nodejs npm && sudo npm install -g serverless

  - &configure_aws_cli
    aws-cli/setup:
      aws-region: 'AWS_REGION'
      aws-access-key-id: 'AWS_ACCESS_KEY_ID'
      aws-secret-access-key: 'AWS_SECRET_ACCESS_KEY'
  
  - &install_deps
    run:
      name: Installing dependencies
      command: pip install -r requirements.txt

  - &create_env
    run:
      name: Creating .env from environment variables
      command: make create-env


  - &save_to_workspace
    persist_to_workspace:
      root: *workdir
      paths:
        - serverless.yml
        - Makefile
        - src
        - handler.py
        - Dockerfile
        - requirements.txt
        - createenv.sh
    
  - &mount_workspace
    attach_workspace:
      at: *workdir

  - &setup-psycopg2
    run:
      name: Setting up lambda environmemnt
      command: git clone https://github.com/jkehler/awslambda-psycopg2.git && mv awslambda-psycopg2/psycopg2-3.7 psycopg2

  - &test
    run:
      name: Running unit tests
      command: make test

  - &deploy
    run:
      name: Deploying service
      command: sls plugin install -n serverless-python-requirements && SLS_DEBUG=* serverless deploy -v
  
  - &build_test_only_filters
    filters:
      branches:
        ignore: master
  
  - &deploy_production_filters
    filters:
      branches:
        ignore: /.*/
      tags:
        only: /^v.*/
      

jobs:
  build:
    <<: *container_config
    steps:
        - *configure_aws_cli
        - *serverless_setup
        - *checkout
        - *install_deps
        - *test
        - *save_to_workspace
  deploy:
    <<: *container_config
    steps:
        - *mount_workspace
        - *setup_remote_docker
        - *create_env
        - *install_aws_cli
        - *configure_aws_cli
        - *install_deps
        - *setup-psycopg2
        - *serverless_setup
        - *deploy

workflows:
  version: 2

  build-test-image:
    jobs:
      - build:
          <<: *build_test_only_filters
          context: aws-production

  deploy-production:
    jobs:
      - build:
          <<: *deploy_production_filters
          context: aws-production
      - deploy:
          <<: *deploy_production_filters
          context: aws-production
          requires:
            - build
